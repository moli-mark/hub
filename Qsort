#include <stdio.h>

void swap(int* a,int low,int high){
	int c=a[low];
	a[low]=a[high];
	a[high]=c;
	return;
}

int partition(int* a,int low,int high){
	int pivotkey;
	int middle=(low+high)/2;
	if(a[low]>a[high]){
		swap(a,low,high);
	}
	if(a[middle]>a[high]){
		swap(a,middle,high);
	}
	if(a[middle]>a[low]){
		swap(a,low,middle);
	}
	pivotkey=a[low];
	while(low<high){
		while(low<high&&a[high]>=pivotkey){
			high--;
			}
			a[low]=a[high];
			while(low<high&&a[low]<=pivotkey){
				low++;
			}
			a[high]=a[low];
		}
		a[low]=pivotkey;
		return low;
}

void qsort(int* a,int low,int high){
	int pivot;
	while(low<high){
		pivot=partition(a,low,high);
		qsort(a,low,pivot-1);
		low=pivot+1;
	}
	return;
}

int main(){
	int a[20]={20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1};
	qsort(a,0,19);
	int i;
	for(i=0;i<20;i++){
		printf("%d\n",a[i]);
	}
	return 0;
}
